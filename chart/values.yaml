# Default values for xnat chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Common parameters

## @param replicaCount Number of replicas
replicaCount: 1

## @param image.digest Image digest in the way sha256:aa...
## @param image.pullPolicy image pull policy
## @param image.pullSecret Name of secret used to pull image
## @param image.registry Image registry
## @param image.repository Image repository
## @param image.tag Image tag
##
image:
  digest: ""
  pullPolicy: IfNotPresent
  pullSecret: ""
  registry: ghcr.io
  repository: ghcr.io/ucl-mirsg/xnat-core
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

## @param imageCredentials.registry Image registry
## @param imageCredentials.username Image registry username
## @param imageCredentials.password Image registry password
## @param imageCredentials.email Image registry email
##
imageCredentials:
  registry: ghcr.io
  username: username
  password: password
  email: ""

## @param nameOverride Override name
nameOverride: ""
## @param fullnameOverride Override fullname
fullnameOverride: ""

## @param serviceAccount.create Specifies whether a service account should be created
## @param serviceAccount.automount Automatically mount a ServiceAccount's API credentials?
## @param serviceAccount.annotations Annotations to add to the service account
## @param serviceAccount.name The name of the service account to use.
##
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## @param service.port Service port
## @param service.type Service type
## @param service.targetPort Service target port
##
service:
  type: ClusterIP
  port: 80
  targetPort: 8080

## @param persistence.storageClass Persistent volume storage class
## @param persistence.annotations Persistent volume annotations
##
persistence:
  storageClass:
  annotations: {}

## @param volumes[0].name XNAT node configuration Volume name
## @param volumes[1].name Wait for PostgreSQL Volume name
## @param volumes[1].configMap.name Wait for PostgreSQL Volume name
## @param volumes[2].name XNAT archive Volume name
## @param volumes[2].accessModes XNAT archive Volume access modes
## @param volumes[2].annotations XNAT archive Volume annotations
## @param volumes[2].existingClaim XNAT archive Volume existingClaim
## @param volumes[2].persistent XNAT archive Volume persistent
## @param volumes[2].size XNAT archive Volume size
## @param volumes[2].storageClass XNAT archive Volume storageClass
## @param volumes[3].name XNAT instance configuration Volume name
## @param volumes[3].secret.secretName XNAT instance configuration Volume secret name
## @param volumes[4].name XNAT prearchive Volume name
## @param volumes[4].accessModes XNAT prearchive Volume access modes
## @param volumes[4].annotations XNAT prearchive Volume annotations
## @param volumes[4].existingClaim XNAT prearchive Volume existingClaim
## @param volumes[4].persistent XNAT prearchive Volume persistent
## @param volumes[4].size XNAT prearchive Volume size
## @param volumes[4].storageClass XNAT prearchive Volume storageClass
##
volumes:
  - name: node-conf
  - name: wait-for-postgres
    configMap:
      name: wait-for-postgres
  - name: xnat-archive
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim:
    persistent: true
    size: 8Gi
    storageClass:
  - name: xnat-config
    secret:
      secretName: xnat-conf
  - name: xnat-prearchive
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim:
    persistent: true
    size: 8Gi
    storageClass:

## @param volumeMounts[0].name XNAT node configuration Volume name
## @param volumeMounts[0].mountPath XNAT node configuration Volume mount path
## @param volumeMounts[1].name Wait for PostgreSQL Volume name
## @param volumeMounts[1].mountPath Wait for PostgreSQL Volume mount path
## @param volumeMounts[1].readOnly Wait for PostgreSQL Volume read only
## @param volumeMounts[2].name XNAT archive Volume name
## @param volumeMounts[2].mountPath XNAT archive Volume mount path
## @param volumeMounts[2].subPath XNAT archive Volume sub path
## @param volumeMounts[3].name XNAT instance configuration Volume name
## @param volumeMounts[3].mountPath XNAT instance configuration Volume mount path
## @param volumeMounts[3].readOnly XNAT instance configuration Volume read only
## @param volumeMounts[3].subPath XNAT instance configuration Volume sub path
## @param volumeMounts[4].name XNAT prearchive Volume name
## @param volumeMounts[4].mountPath XNAT prearchive Volume mount path
## @param volumeMounts[4].subPath XNAT prearchive Volume sub path
volumeMounts:
  - name: node-conf
    mountPath: /data/xnat/home/config
  - name: wait-for-postgres
    mountPath: /usr/local/bin/wait-for-postgres.sh
    readOnly: true
  - name: xnat-archive
    mountPath: /data/xnat/archive
    subPath:
  - name: xnat-config
    mountPath: /data/xnat/home/config/xnat-conf.properties
    readOnly: true
    subPath: xnat-conf.properties
  - name: xnat-prearchive
    mountPath: /data/xnat/prearchive
    subPath:

## @section XNAT Database parameters
## @param postgresql.enabled Enable or disable the PostgreSQL deployment
## @param postgresql.auth.database PostgreSQL database name
## @param postgresql.auth.username PostgreSQL username
## @param postgresql.auth.password PostgreSQL password. Make sure to override this.
## @param postgresql.auth.postgresPassword PostgreSQL password. Make sure to override this.
postgresql:
  enabled: true
  auth:
    database: xnat
    username: xnat
    password: xnat
    postgresPassword: postgres

## @section XNAT Web parameters
web:
  ## @param web.podAnnotations Annotations to add to the web pod
  podAnnotations: {}

  ## @param web.podLabels Labels to add to the web pod
  podLabels: {}

  ## @param web.podSecurityContext Pod security context
  podSecurityContext: {}

  ## @param web.securityContext Pod security context
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## @param web.ingress.enabled Enable or disable the ingress deployment
  ## @param web.ingress.className Ingress class name
  ## @param web.ingress.annotations Ingress annotations
  ## @param web.ingress.hosts[0].host Ingress host
  ## @param web.ingress.hosts[0].paths[0].path Ingress path
  ## @param web.ingress.hosts[0].paths[0].pathType Ingress path type
  ## @param web.ingress.tls Ingress TLS
  ##
  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  ## @param web.resources.limits.cpu CPU and memory limits
  ## @param web.resources.limits.memory Memory limits
  ## @param web.resources.requests.cpu CPU and memory requests
  ## @param web.resources.requests.memory Memory requests
  resources:
    limits:
      cpu: 2
      memory: 4000Mi
    requests:
      cpu: 1
      memory: 4000Mi

  ## @param web.livenessProbe.failureThreshold Liveness probe failure threshold
  ## @param web.livenessProbe.httpGet.path Liveness probe httpGet path
  ## @param web.livenessProbe.httpGet.port Liveness probe httpGet port
  ## @param web.livenessProbe.periodSeconds Liveness probe period seconds
  ## @param web.livenessProbe.timeoutSeconds Liveness probe timeout seconds
  livenessProbe:
    failureThreshold: 1
    httpGet:
      path: /app/template/Login.vm#!
      port: http
    periodSeconds: 10
    timeoutSeconds: 5

  ## @param web.readinessProbe.failureThreshold Readiness probe failure threshold
  ## @param web.readinessProbe.httpGet.path Readiness probe httpGet path
  ## @param web.readinessProbe.httpGet.port Readiness probe httpGet port
  ## @param web.readinessProbe.periodSeconds Readiness probe period seconds
  ## @param web.readinessProbe.timeoutSeconds Readiness probe timeout seconds
  readinessProbe:
    failureThreshold: 1
    httpGet:
      path: /app/template/Login.vm#!
      port: http
    periodSeconds: 10
    timeoutSeconds: 3

  ## @param web.startupProbe.failureThreshold Startup probe failure threshold
  ## @param web.startupProbe.httpGet.path Startup probe httpGet path
  ## @param web.startupProbe.httpGet.port Startup probe httpGet port
  ## @param web.startupProbe.periodSeconds Startup probe period seconds
  startupProbe:
    failureThreshold: 15
    httpGet:
      path: /app/template/Login.vm#!
      port: http
    periodSeconds: 10

  ## @param web.autoscaling.enabled Enable or disable the autoscaling
  ## @param web.autoscaling.minReplicas Minimum number of replicas
  ## @param web.autoscaling.maxReplicas Maximum number of replicas
  ## @param web.autoscaling.targetCPUUtilizationPercentage Target CPU utilisation percentage
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  ## @param web.nodeSelector Node selector
  nodeSelector: {}

  ## @param web.tolerations Tolerations to add to the web pod
  tolerations: []

  ## @param web.affinity Affinity to add to the web pod
  affinity: {}
