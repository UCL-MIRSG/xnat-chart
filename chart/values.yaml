# Default values for xnat chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
---
## @section Common parameters

## @param replicaCount Number of replicas
replicaCount: 2

## @param image.pullPolicy image pull policy
## @param image.pullSecret Name of secret used to pull image
## @param image.registry Image registry
## @param image.namespace Image registry namespace
## @param image.name Name of the image in the registry
## @param image.tag Image tag
##
image:
  pullPolicy: IfNotPresent
  pullSecret: ""
  registry: "ghcr.io"
  namespace: "ucl-mirsg"
  name: ""
  tag: latest

## @param imageCredentials.enabled Enable or disable image pull secret
## @param imageCredentials.registry Image registry
## @param imageCredentials.username Image registry username
## @param imageCredentials.password Image registry password
## @param imageCredentials.email Image registry email
imageCredentials:
  enabled: false
  registry: ""
  username: ""
  password: ""
  email: ""

## @param nameOverride Override name
nameOverride: ""
## @param fullnameOverride Override fullname
fullnameOverride: ""

## @param serviceAccount.create Specifies whether a service account should be created
## @param serviceAccount.automount Automatically mount a ServiceAccount's API credentials?
## @param serviceAccount.annotations Annotations to add to the service account
## @param serviceAccount.name The name of the service account to use.
##
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## @param service.port Service port
## @param service.type Service type
## @param service.targetPort Service target port
##
service:
  type: ClusterIP
  port: 80
  targetPort: 8080

## @param persistence.storageClass Persistent volume storage class
## @param persistence.annotations Persistent volume annotations
##
persistence:
  storageClass:
  annotations: {}

## @param volumes[0].name XNAT build volume name
## @param volumes[0].accessMode XNAT build volume access modes
## @param volumes[0].annotations XNAT build volume annotations
## @param volumes[0].existingClaim XNAT build volume existingClaim
## @param volumes[0].persistent XNAT build volume persistent
## @param volumes[0].size XNAT build volume size
## @param volumes[0].storageClass XNAT build volume storageClass
## @param volumes[1].name XNAT cache volume name
## @param volumes[1].accessMode XNAT cache volume access modes
## @param volumes[1].annotations XNAT cache volume annotations
## @param volumes[1].existingClaim XNAT cache volume existingClaim
## @param volumes[1].persistent XNAT cache volume persistent
## @param volumes[1].size XNAT cache volume size
## @param volumes[1].storageClass XNAT cache volume storageClass
## @param volumes[2].name XNAT home volume name
## @param volumes[2].accessMode XNAT home volume access modes
## @param volumes[2].annotations XNAT home volume annotations
## @param volumes[2].existingClaim XNAT home volume existingClaim
## @param volumes[2].persistent XNAT home volume persistent
## @param volumes[2].size XNAT home volume size
## @param volumes[2].storageClass XNAT home volume storageClass
volumes:
  - name: xnat-build
    accessMode: ReadWriteOnce
    annotations: {}
    existingClaim: false
    persistent: false
    size: 1Gi
    storageClass: # e.g. local-path for k3s default storage class
  - name: xnat-cache
    accessMode: ReadWriteOnce
    annotations: {}
    existingClaim: false
    persistent: false
    size: 10Gi
    storageClass: # e.g. local-path for k3s default storage class
  - name: xnat-home
    accessMode: ReadWriteOnce
    annotations: {}
    existingClaim: false
    persistent: false
    size: 10Gi
    storageClass: # e.g. local-path for k3s default storage class

## @param volumeMounts[0].name XNAT build volume name
## @param volumeMounts[0].mountPath XNAT build volume mount path
## @param volumeMounts[0].subPath XNAT build volume sub path
## @param volumeMounts[1].name XNAT cache volume name
## @param volumeMounts[1].mountPath XNAT cache volume mount path
## @param volumeMounts[1].subPath XNAT cache volume sub path
## @param volumeMounts[2].name XNAT home volume name
## @param volumeMounts[2].mountPath XNAT prearchive volume mount path
## @param volumeMounts[2].subPath XNAT prearchive volume sub path
volumeMounts:
  - name: xnat-build
    mountPath: /data/xnat/build
    subPath:
  - name: xnat-cache
    mountPath: /data/xnat/cache
    subPath:
  - name: xnat-home
    mountPath: /data/xnat/home
    subPath:

## @param extraVolumes[0].name XNAT archive volume name
## @param extraVolumes[0].accessMode XNAT archive volume access modes
## @param extraVolumes[0].annotations XNAT archive volume annotations
## @param extraVolumes[0].existingClaim XNAT archive volume existingClaim
## @param extraVolumes[0].persistent XNAT archive volume persistent
## @param extraVolumes[0].size XNAT archive volume size
## @param extraVolumes[0].storageClass XNAT archive volume storageClass
## @param extraVolumes[1].name XNAT prearchive volume name
## @param extraVolumes[1].accessMode XNAT prearchive volume access modes
## @param extraVolumes[1].annotations XNAT prearchive volume annotations
## @param extraVolumes[1].existingClaim XNAT prearchive volume existingClaim
## @param extraVolumes[1].persistent XNAT prearchive volume persistent
## @param extraVolumes[1].size XNAT prearchive volume size
## @param extraVolumes[1].storageClass XNAT prearchive volume storageClass
extraVolumes:
  # - name: xnat-archive-project01
  #   accessMode: ReadWriteMany
  #   annotations: {}
  #   existingClaim: true
  #   persistent: true
  #   size: 8Gi
  #   storageClass: smb
  # - name: xnat-prearchive-project01
  #   accessMode: ReadWriteMany
  #   annotations: {}
  #   existingClaim: true
  #   persistent: true
  #   size: 8Gi
  #   storageClass: smb
  - name: xnat-archive
    accessMode: ReadWriteOnce
    annotations: {}
    existingClaim: false
    persistent: false
    size: 10Gi
    storageClass: # e.g. local-path for k3s default storage class
  - name: xnat-prearchive
    accessMode: ReadWriteOnce
    annotations: {}
    existingClaim: false
    persistent: false
    size: 10Gi
    storageClass: # e.g. local-path for k3s default storage class

## @param extraVolumeMounts[0].name XNAT archive volume name
## @param extraVolumeMounts[0].mountPath XNAT archive volume mount path
## @param extraVolumeMounts[0].subPath XNAT archive volume sub path
## @param extraVolumeMounts[1].name XNAT prearchive volume name
## @param extraVolumeMounts[1].mountPath XNAT prearchive volume mount path
## @param extraVolumeMounts[1].subPath XNAT prearchive volume sub path
extraVolumeMounts:
  # - name: xnat-archive-project01
  #   mountPath: /data/xnat/archive/project01
  #   subPath:
  # - name: xnat-prearchive-project01
  #   mountPath: /data/xnat/prearchive/project01
  #   subPath:
  - name: xnat-archive
    mountPath: /data/xnat/archive
    subPath:
  - name: xnat-prearchive
    mountPath: /data/xnat/prearchive
    subPath:

## @section XNAT Web parameters
web:
  ## @param web.siteUrl Site URL
  siteUrl: ""

  ## @param web.auth.openid.provider OpenID provider name
  ## @param web.auth.openid.enabled Enable or disable the config
  ## @param web.auth.openid.secretName Name of secret with clientID and clientSecret
  ## @param web.auth.openid.accessTokenUri OpenID access token URI
  ## @param web.auth.openid.userAuthUri OpenID user authentication URI
  ## @param web.auth.openid.link OpenID link
  ## @param web.auth.localdb.secretName Name of secret with adminPassword and serviceAdminPassword
  auth:
    openid:
      provider: openid1
      enabled: false
      secretName: openid-secret
      accessTokenUri: ""
      userAuthUri: ""
      link: ""
    localdb:
      secretName: localdb-secret

  ## @param web.podAnnotations Annotations to add to the web pod
  podAnnotations: {}

  ## @param web.podLabels Labels to add to the web pod
  podLabels: {}

  ## @param web.podSecurityContext.runAsUser Pod security context runAsUser
  podSecurityContext:
    runAsUser: 1000

  ## @param web.securityContext Pod security context
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## @param web.ingress.enabled Enable or disable the ingress deployment
  ## @param web.ingress.className Ingress class name
  ## @param web.ingress.annotations Ingress annotations
  ## @param web.ingress.hosts[0].host Ingress host
  ## @param web.ingress.hosts[0].paths[0].path Ingress path
  ## @param web.ingress.hosts[0].paths[0].pathType Ingress path type
  ## @param web.ingress.tls Ingress TLS
  ##
  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: true
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  ## @param web.resources.limits.cpu CPU and memory limits
  ## @param web.resources.limits.memory Memory limits
  ## @param web.resources.requests.cpu CPU and memory requests
  ## @param web.resources.requests.memory Memory requests
  resources:
    limits:
      cpu: 2
      memory: 6000Mi
    requests:
      cpu: 1
      memory: 6000Mi

  ## @param web.livenessProbe.failureThreshold Liveness probe failure threshold
  ## @param web.livenessProbe.httpGet.path Liveness probe httpGet path
  ## @param web.livenessProbe.httpGet.port Liveness probe httpGet port
  ## @param web.livenessProbe.periodSeconds Liveness probe period seconds
  ## @param web.livenessProbe.timeoutSeconds Liveness probe timeout seconds
  livenessProbe:
    failureThreshold: 1
    httpGet:
      path: /app/template/Login.vm#!
      port: http
    periodSeconds: 10
    timeoutSeconds: 5

  ## @param web.readinessProbe.failureThreshold Readiness probe failure threshold
  ## @param web.readinessProbe.httpGet.path Readiness probe httpGet path
  ## @param web.readinessProbe.httpGet.port Readiness probe httpGet port
  ## @param web.readinessProbe.periodSeconds Readiness probe period seconds
  ## @param web.readinessProbe.timeoutSeconds Readiness probe timeout seconds
  readinessProbe:
    failureThreshold: 1
    httpGet:
      path: /app/template/Login.vm#!
      port: http
    periodSeconds: 10
    timeoutSeconds: 3

  ## @param web.startupProbe.failureThreshold Startup probe failure threshold
  ## @param web.startupProbe.httpGet.path Startup probe httpGet path
  ## @param web.startupProbe.httpGet.port Startup probe httpGet port
  ## @param web.startupProbe.periodSeconds Startup probe period seconds
  ## @param web.startupProbe.initialDelaySeconds Startup probe initial delay seconds
  startupProbe:
    failureThreshold: 15
    httpGet:
      path: /app/template/Login.vm#!
      port: http
    periodSeconds: 10
    initialDelaySeconds: 20

  ## @param web.autoscaling.enabled Enable or disable the autoscaling
  ## @param web.autoscaling.minReplicas Minimum number of replicas
  ## @param web.autoscaling.maxReplicas Maximum number of replicas
  ## @param web.autoscaling.targetCPUUtilizationPercentage Target CPU utilisation percentage
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  ## @param web.nodeSelector Node selector
  nodeSelector: {}

  ## @param web.tolerations Tolerations to add to the web pod
  tolerations: []

  ## @param web.affinity Affinity to add to the web pod
  affinity: {}

  ## @param web.tomcat.catalinaOpts Override default CATALINA_OPTS
  tomcat:
    catalinaOpts: ""

  ## @param web.config.enabled Enable or disable the config
  ## @param web.config.image.pullPolicy Image pull policy
  ## @param web.config.image.name Image name
  ## @param web.config.image.namespace Image namespace
  ## @param web.config.image.registry Image registry
  ## @param web.config.image.tag Image tag
  config:
    enabled: true
    image:
      pullPolicy: ""
      name: xnat-config
      namespace: ucl-mirsg
      registry: ghcr.io
      tag: latest

### @section XNAT Database parameters
## @param postgresql.enabled Whether to deploy a PostgreSQL cluster
## @param postgresql.backups.enabled Whether to enable database backups
## @param postgresql.cluster.imageName Name of the PostgreSQL container image
## @param postgresql.cluster.instances Number of PostgreSQL instances
## @param postgresql.cluster.postgresql.parameters.shared_buffers Amount of memory used for shared buffers
## @param postgresql.cluster.resources.requests.cpu CPU request
## @param postgresql.cluster.resources.requests.memory Memory request
## @param postgresql.cluster.resources.limits.cpu CPU limit
## @param postgresql.cluster.resources.limits.memory Memory limit
## @param postgresql.cluster.storage.size Size of the storage
## @param postgresql.cluster.initdb.database PostgreSQL database name
## @param postgresql.cluster.initdb.owner PostgreSQL owner
## @param postgresql.cluster.initdb.secret.name Name of the secret containing credentials for the database
## @param postgresql.cluster.version.postgresql PostgreSQL major version to use
postgresql:
  enabled: true
  backups:
    enabled: false
  cluster:
    imageName: ghcr.io/cloudnative-pg/postgresql:14.17-standard-bookworm
    instances: 1
    postgresql:
      parameters:
        shared_buffers: "512MB"
    resources:
      requests:
        memory: "2Gi"
        cpu: 1
      limits:
        memory: "4Gi"
        cpu: 2
    storage:
      size: "8Gi"
    initdb:
      database: xnat
      owner: xnat
      secret:
        name: pg-user-secret
    version:
      postgresql: "14"